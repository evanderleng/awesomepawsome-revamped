{"ast":null,"code":"var _jsxFileName = \"/home/stud/Desktop/awesome-pawsome/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [records, setRecords] = useState([]);\n  useEffect(() => {\n    fetch(\"/api/test\").then(\n    //ip and port of backend already set in package.json\n    response => response.json()).then(data => setRecords(data)).catch(err => console.log(err));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React is running successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), typeof records.testing === 'undefined' ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Unable to reach backend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: records.testing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","records","setRecords","fetch","then","response","json","data","catch","err","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","testing","_c","$RefreshReg$"],"sources":["/home/stud/Desktop/awesome-pawsome/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nfunction App() {\n\n  const [records, setRecords] = useState([])\n  \n  useEffect( () => {\n    fetch(\"/api/test\").then( //ip and port of backend already set in package.json\n      response => response.json()\n    ).then(\n      data => setRecords(data)\n    ).catch(\n      err => console.log(err)\n    )\n  })\n\n  return (\n    <div>\n      <h1>React is running successfully!</h1>\n      {(typeof records.testing === 'undefined') ? (\n        <h2>Unable to reach backend</h2>\n      ):(\n        <h2>{records.testing}</h2>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAE,MAAM;IACfQ,KAAK,CAAC,WAAW,CAAC,CAACC,IAAI;IAAE;IACvBC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAC5B,CAAC,CAACF,IAAI,CACJG,IAAI,IAAIL,UAAU,CAACK,IAAI,CACzB,CAAC,CAACC,KAAK,CACLC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CACxB,CAAC;EACH,CAAC,CAAC;EAEF,oBACEX,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrC,OAAOf,OAAO,CAACgB,OAAO,KAAK,WAAW,gBACtCnB,OAAA;MAAAc,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEhClB,OAAA;MAAAc,QAAA,EAAKX,OAAO,CAACgB;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAC1B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChB,EAAA,CAxBQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}